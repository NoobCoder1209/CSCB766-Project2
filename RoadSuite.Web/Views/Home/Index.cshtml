@model (PagedResult<Car> Paged, CarFilterViewModel Filter)
@{
    ViewData["Title"] = "Marketplace";
}

<section class="mb-4">
    <h1 class="display-6 mb-3">Discover Asian Automotive Excellence</h1>
    <form method="get" class="row g-3 align-items-end bg-darker rounded p-3 shadow-sm">
        <input type="hidden" asp-for="Filter.SortOrder" />
        <div class="col-md-4">
            <label asp-for="Filter.Make" class="form-label">Make</label>
            <input asp-for="Filter.Make" class="form-control bg-dark text-light border-secondary" placeholder="Search make" />
        </div>
        <div class="col-md-3">
            <label class="form-label" for="categoryFilter">Category</label>
            <select asp-for="Filter.CategoryId" asp-items="Model.Filter.CategoryOptions" class="form-select bg-dark text-light border-secondary" id="categoryFilter">
                <option value="">All</option>
            </select>
        </div>
        @if (User.IsInRole("Moderator") || User.IsInRole("Admin"))
        {
            <div class="col-md-3">
                <label class="form-label" for="statusFilter">Status</label>
                <select asp-for="Filter.Status" asp-items="Model.Filter.StatusOptions" class="form-select bg-dark text-light border-secondary" id="statusFilter">
                    <option value="">All</option>
                </select>
            </div>
        }
        <div class="col-md-2">
            <label class="form-label" asp-for="Filter.PageSize">Page Size</label>
            <select asp-for="Filter.PageSize" asp-items="Model.Filter.PageSizeOptions" class="form-select bg-dark text-light border-secondary"></select>
        </div>
        <div class="col-12 d-flex gap-2">
            <button type="submit" class="btn btn-primary">Apply</button>
            <a asp-action="Index" class="btn btn-outline-light">Reset</a>
        </div>
    </form>
</section>

<section>
    <div class="d-flex justify-content-between align-items-center mb-2">
        <h2 class="h5 mb-0">Cars (@Model.Paged.TotalItems)</h2>
        <div class="btn-group">
            <a class="btn btn-sm btn-outline-light" asp-route-sortOrder="created_desc" asp-route-make="@Model.Filter.Make" asp-route-categoryId="@Model.Filter.CategoryId" asp-route-status="@Model.Filter.Status" asp-route-pageSize="@Model.Filter.PageSize">Newest</a>
            <a class="btn btn-sm btn-outline-light" asp-route-sortOrder="created" asp-route-make="@Model.Filter.Make" asp-route-categoryId="@Model.Filter.CategoryId" asp-route-status="@Model.Filter.Status" asp-route-pageSize="@Model.Filter.PageSize">Oldest</a>
            <a class="btn btn-sm btn-outline-light" asp-route-sortOrder="price" asp-route-make="@Model.Filter.Make" asp-route-categoryId="@Model.Filter.CategoryId" asp-route-status="@Model.Filter.Status" asp-route-pageSize="@Model.Filter.PageSize">Price ↑</a>
            <a class="btn btn-sm btn-outline-light" asp-route-sortOrder="price_desc" asp-route-make="@Model.Filter.Make" asp-route-categoryId="@Model.Filter.CategoryId" asp-route-status="@Model.Filter.Status" asp-route-pageSize="@Model.Filter.PageSize">Price ↓</a>
            <a class="btn btn-sm btn-outline-light" asp-route-sortOrder="year_desc" asp-route-make="@Model.Filter.Make" asp-route-categoryId="@Model.Filter.CategoryId" asp-route-status="@Model.Filter.Status" asp-route-pageSize="@Model.Filter.PageSize">Year ↓</a>
        </div>
    </div>

    <div class="table-responsive rounded bg-darker shadow-sm">
        <table class="table table-dark table-hover align-middle mb-0">
            <thead class="table-secondary text-dark">
                <tr>
                    <th>Make</th>
                    <th>Model</th>
                    <th>Year</th>
                    <th class="text-end">Price</th>
                    <th>Category</th>
                    <th>Status</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (!Model.Paged.Items.Any())
                {
                    <tr>
                        <td colspan="7" class="text-center text-secondary py-4">No cars match your criteria.</td>
                    </tr>
                }
                else
                {
                    foreach (var car in Model.Paged.Items)
                    {
                        <tr>
                            <td>@car.Make</td>
                            <td>@car.Model</td>
                            <td>@car.Year</td>
                            <td class="text-end">@car.Price.ToString("C")</td>
                            <td>@car.Category?.Name</td>
                            <td><span class="badge bg-secondary">@car.Status</span></td>
                            <td class="text-end">
                                <a asp-controller="Cars" asp-action="Details" asp-route-id="@car.Id" class="btn btn-sm btn-outline-primary">Details</a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <nav class="mt-3" aria-label="Car pagination">
        <ul class="pagination pagination-sm justify-content-center">
            <li class="page-item @(Model.Paged.HasPreviousPage ? string.Empty : "disabled")">
            <a class="page-link" asp-route-pageNumber="@(Model.Paged.PageNumber - 1)" asp-route-pageSize="@Model.Paged.PageSize" asp-route-make="@Model.Filter.Make" asp-route-categoryId="@Model.Filter.CategoryId" asp-route-status="@Model.Filter.Status" asp-route-sortOrder="@ViewBag.SortOrder">Previous</a>
        </li>
        @for (var page = 1; page <= Model.Paged.TotalPages; page++)
        {
            <li class="page-item @(page == Model.Paged.PageNumber ? "active" : string.Empty)">
                    <a class="page-link" asp-route-pageNumber="@page" asp-route-pageSize="@Model.Paged.PageSize" asp-route-make="@Model.Filter.Make" asp-route-categoryId="@Model.Filter.CategoryId" asp-route-status="@Model.Filter.Status" asp-route-sortOrder="@ViewBag.SortOrder">@page</a>
            </li>
        }
        <li class="page-item @(Model.Paged.HasNextPage ? string.Empty : "disabled")">
            <a class="page-link" asp-route-pageNumber="@(Model.Paged.PageNumber + 1)" asp-route-pageSize="@Model.Paged.PageSize" asp-route-make="@Model.Filter.Make" asp-route-categoryId="@Model.Filter.CategoryId" asp-route-status="@Model.Filter.Status" asp-route-sortOrder="@ViewBag.SortOrder">Next</a>
        </li>
        </ul>
    </nav>
</section>
