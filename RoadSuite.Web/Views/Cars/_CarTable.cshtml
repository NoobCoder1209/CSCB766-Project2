@using System.Security.Claims
@model (PagedResult<Car> Paged, string ContextAction, CarFilterViewModel? Filter)
<div class="table-responsive rounded bg-darker shadow-sm">
    <table class="table table-dark table-hover align-middle mb-0">
        <thead class="table-secondary text-dark">
            <tr>
                <th>
                    <a asp-action="@Model.ContextAction"
                       asp-route-sortOrder="@(ViewBag.SortOrder == "make" ? "make_desc" : "make")"
                       asp-route-make="@Model.Filter?.Make"
                       asp-route-categoryId="@Model.Filter?.CategoryId"
                       asp-route-status="@Model.Filter?.Status"
                       asp-route-pageSize="@Model.Filter?.PageSize"
                       class="link-light text-decoration-none">Make</a>
                </th>
                <th>Model</th>
                <th>
                    <a asp-action="@Model.ContextAction"
                       asp-route-sortOrder="@(ViewBag.SortOrder == "year" ? "year_desc" : "year")"
                       asp-route-make="@Model.Filter?.Make"
                       asp-route-categoryId="@Model.Filter?.CategoryId"
                       asp-route-status="@Model.Filter?.Status"
                       asp-route-pageSize="@Model.Filter?.PageSize"
                       class="link-light text-decoration-none">Year</a>
                </th>
                <th class="text-end">
                    <a asp-action="@Model.ContextAction"
                       asp-route-sortOrder="@(ViewBag.SortOrder == "price" ? "price_desc" : "price")"
                       asp-route-make="@Model.Filter?.Make"
                       asp-route-categoryId="@Model.Filter?.CategoryId"
                       asp-route-status="@Model.Filter?.Status"
                       asp-route-pageSize="@Model.Filter?.PageSize"
                       class="link-light text-decoration-none">Price</a>
                </th>
                <th>Category</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Paged.Items.Any())
            {
                <tr>
                    <td colspan="7" class="text-center text-secondary py-4">No cars available.</td>
                </tr>
            }
            else
            {
                foreach (var car in Model.Paged.Items)
                {
                    <tr>
                        <td>@car.Make</td>
                        <td>@car.Model</td>
                        <td>@car.Year</td>
                        <td class="text-end">@car.Price.ToString("C")</td>
                        <td>@car.Category?.Name</td>
                        <td><span class="badge bg-secondary">@car.Status</span></td>
                        <td class="text-end">
                            <div class="btn-group btn-group-sm">
                                <a asp-action="Details" asp-route-id="@car.Id" class="btn btn-outline-primary">Details</a>
                                @if (User.Identity?.IsAuthenticated ?? false)
                                {
                                    if (User.IsInRole("Admin") || User.IsInRole("Moderator") || (User.IsInRole("Dealer") && car.DealerProfile?.UserId == User.FindFirstValue(ClaimTypes.NameIdentifier)))
                                    {
                                        <a asp-action="Edit" asp-route-id="@car.Id" class="btn btn-outline-light">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@car.Id" class="btn btn-outline-danger">Delete</a>
                                    }
                                }
                            </div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<nav class="mt-3" aria-label="Pagination">
    <ul class="pagination pagination-sm justify-content-center">
        <li class="page-item @(Model.Paged.HasPreviousPage ? string.Empty : "disabled")">
            <a class="page-link"
               asp-route-pageNumber="@(Model.Paged.PageNumber - 1)"
               asp-route-pageSize="@Model.Paged.PageSize"
               asp-route-make="@Model.Filter?.Make"
               asp-route-categoryId="@Model.Filter?.CategoryId"
               asp-route-status="@Model.Filter?.Status"
               asp-route-sortOrder="@ViewBag.SortOrder">Previous</a>
        </li>
        @for (var i = 1; i <= Model.Paged.TotalPages; i++)
        {
            <li class="page-item @(Model.Paged.PageNumber == i ? "active" : string.Empty)">
                <a class="page-link"
                   asp-route-pageNumber="@i"
                   asp-route-pageSize="@Model.Paged.PageSize"
                   asp-route-make="@Model.Filter?.Make"
                   asp-route-categoryId="@Model.Filter?.CategoryId"
                   asp-route-status="@Model.Filter?.Status"
                   asp-route-sortOrder="@ViewBag.SortOrder">@i</a>
            </li>
        }
        <li class="page-item @(Model.Paged.HasNextPage ? string.Empty : "disabled")">
            <a class="page-link"
               asp-route-pageNumber="@(Model.Paged.PageNumber + 1)"
               asp-route-pageSize="@Model.Paged.PageSize"
               asp-route-make="@Model.Filter?.Make"
               asp-route-categoryId="@Model.Filter?.CategoryId"
               asp-route-status="@Model.Filter?.Status"
               asp-route-sortOrder="@ViewBag.SortOrder">Next</a>
        </li>
    </ul>
</nav>
